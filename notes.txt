The code that allows the user to change themes is primarily located in these files:
components/theme-provider.tsx: This is the core provider that manages the theme state for the entire application. It uses useEditorStore to access and update the themeState. The handleThemeChange and handleThemeToggle functions are responsible for updating the currentMode (light/dark) of the theme. It also uses applyThemeToElement from utils/apply-theme.ts to actually apply the CSS variables to the document's documentElement.
components/editor/theme-preset-select.tsx: This component provides a UI for users to select from a list of predefined themes (presets) or to randomize the theme. It interacts with useEditorStore and useThemePresetStore to apply the selected theme preset. It also contains the ThemeControls component which includes buttons for toggling between light/dark modes and randomizing the theme.
components/editor/action-bar/components/theme-toggle.tsx: This component provides a dedicated UI switch for toggling between light and dark modes. It utilizes the useTheme hook from components/theme-provider.tsx to call the toggleTheme function.
components/editor/theme-control-panel.tsx: This component provides controls for users to customize individual aspects of the theme, such as colors, typography, and other settings. The updateStyle function within this component is responsible for updating the styles in the themeState. This directly influences the active theme.
components/theme-view.tsx: This component is used when viewing a specific theme (e.g., from a shared URL). It initializes the theme editor state with the viewed theme's styles and provides options to toggle between light/dark modes, share the theme, or open it in the editor.
utils/apply-theme.ts: This utility function is responsible for taking the ThemeEditorState and applying the corresponding CSS variables to the document.documentElement, effectively changing the visual theme of the application.
config/theme.ts: This file defines the defaultThemeState which includes default light and dark theme styles, and it also specifies COMMON_STYLES that apply to both light and dark modes.
In summary, components/theme-provider.tsx is the central hub for theme management, while other components like theme-preset-select.tsx, theme-toggle.tsx, and theme-control-panel.tsx provide the user interfaces for theme interaction and customization. The utils/apply-theme.ts handles the actual application of styles to the DOM.