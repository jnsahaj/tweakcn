{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/extensions/exception-autocapture/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { assignableWindow, window } from '../../utils/globals'\nimport { PostHog } from '../../posthog-core'\nimport { ExceptionAutoCaptureConfig, Properties, RemoteConfig } from '../../types'\n\nimport { createLogger } from '../../utils/logger'\nimport { EXCEPTION_CAPTURE_ENABLED_SERVER_SIDE } from '../../constants'\nimport { isObject, isUndefined } from '../../utils/type-utils'\n\nconst logger = createLogger('[ExceptionAutocapture]')\n\nexport class ExceptionObserver {\n    instance: PostHog\n    remoteEnabled: boolean | undefined\n    config: Required<ExceptionAutoCaptureConfig>\n    private unwrapOnError: (() => void) | undefined\n    private unwrapUnhandledRejection: (() => void) | undefined\n    private unwrapConsoleError: (() => void) | undefined\n\n    constructor(instance: PostHog) {\n        this.instance = instance\n        this.remoteEnabled = !!this.instance.persistence?.props[EXCEPTION_CAPTURE_ENABLED_SERVER_SIDE]\n        this.config = this.requiredConfig()\n\n        this.startIfEnabled()\n    }\n\n    private requiredConfig(): Required<ExceptionAutoCaptureConfig> {\n        const providedConfig = this.instance.config.capture_exceptions\n        let config = {\n            capture_unhandled_errors: false,\n            capture_unhandled_rejections: false,\n            capture_console_errors: false,\n        }\n\n        if (isObject(providedConfig)) {\n            config = { ...config, ...providedConfig }\n        } else if (isUndefined(providedConfig) ? this.remoteEnabled : providedConfig) {\n            config = { ...config, capture_unhandled_errors: true, capture_unhandled_rejections: true }\n        }\n\n        return config\n    }\n\n    public get isEnabled(): boolean {\n        return (\n            this.config.capture_console_errors ||\n            this.config.capture_unhandled_errors ||\n            this.config.capture_unhandled_rejections\n        )\n    }\n\n    startIfEnabled(): void {\n        if (this.isEnabled) {\n            logger.info('enabled')\n            this.loadScript(this.startCapturing)\n        }\n    }\n\n    private loadScript(cb: () => void): void {\n        if (assignableWindow.__PosthogExtensions__?.errorWrappingFunctions) {\n            // already loaded\n            cb()\n        }\n\n        assignableWindow.__PosthogExtensions__?.loadExternalDependency?.(\n            this.instance,\n            'exception-autocapture',\n            (err) => {\n                if (err) {\n                    return logger.error('failed to load script', err)\n                }\n                cb()\n            }\n        )\n    }\n\n    private startCapturing = () => {\n        if (!window || !this.isEnabled || !assignableWindow.__PosthogExtensions__?.errorWrappingFunctions) {\n            return\n        }\n\n        const wrapOnError = assignableWindow.__PosthogExtensions__.errorWrappingFunctions.wrapOnError\n        const wrapUnhandledRejection =\n            assignableWindow.__PosthogExtensions__.errorWrappingFunctions.wrapUnhandledRejection\n        const wrapConsoleError = assignableWindow.__PosthogExtensions__.errorWrappingFunctions.wrapConsoleError\n\n        try {\n            if (!this.unwrapOnError && this.config.capture_unhandled_errors) {\n                this.unwrapOnError = wrapOnError(this.captureException.bind(this))\n            }\n            if (!this.unwrapUnhandledRejection && this.config.capture_unhandled_rejections) {\n                this.unwrapUnhandledRejection = wrapUnhandledRejection(this.captureException.bind(this))\n            }\n            if (!this.unwrapConsoleError && this.config.capture_console_errors) {\n                this.unwrapConsoleError = wrapConsoleError(this.captureException.bind(this))\n            }\n        } catch (e) {\n            logger.error('failed to start', e)\n            this.stopCapturing()\n        }\n    }\n\n    private stopCapturing() {\n        this.unwrapOnError?.()\n        this.unwrapOnError = undefined\n\n        this.unwrapUnhandledRejection?.()\n        this.unwrapUnhandledRejection = undefined\n\n        this.unwrapConsoleError?.()\n        this.unwrapConsoleError = undefined\n    }\n\n    onRemoteConfig(response: RemoteConfig) {\n        const autocaptureExceptionsResponse = response.autocaptureExceptions\n\n        // store this in-memory in case persistence is disabled\n        this.remoteEnabled = !!autocaptureExceptionsResponse || false\n        this.config = this.requiredConfig()\n\n        if (this.instance.persistence) {\n            this.instance.persistence.register({\n                [EXCEPTION_CAPTURE_ENABLED_SERVER_SIDE]: this.remoteEnabled,\n            })\n        }\n\n        this.startIfEnabled()\n    }\n\n    captureException(errorProperties: Properties) {\n        const posthogHost = this.instance.requestRouter.endpointFor('ui')\n\n        errorProperties.$exception_personURL = `${posthogHost}/project/${\n            this.instance.config.token\n        }/person/${this.instance.get_distinct_id()}`\n\n        this.instance.exceptions.sendExceptionEvent(errorProperties)\n    }\n}\n"]}